services:
  kafka:
    image: quay.io/debezium/kafka:3.1
    ports:
     - 9092:9092
     - 9093:9093
    environment:
     - CLUSTER_ID=bFiwSW-8R0ikusP4DL8mLQ
     - BROKER_ID=1
     - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093

  connect:
    image: quay.io/debezium/connect:3.1
    ports:
     - 8083:8083
     - 9186:9186
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - KAFKA_OPTS=-javaagent:/kafka/etc/jmx_prometheus_javaagent.jar=9186:/kafka/etc/jmx_exporter_config.yml
    volumes:
      - ./connect/jmx_prometheus_javaagent-1.3.0.jar:/kafka/etc/jmx_prometheus_javaagent.jar
      - ./connect/jmx_exporter_config.yml:/kafka/etc/jmx_exporter_config.yml
    depends_on:
      - kafka

  postgres:
    image: postgres:17-alpine
    user: postgres
    restart: always
    healthcheck:
      test: 'pg_isready -U user --dbname=inventorydb'
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: inventorydb
      POSTGRES_PASSWORD: top-secret
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c max_slot_wal_keep_size=50GB
    volumes:
      - ./postgres/00_init.sql:/docker-entrypoint-initdb.d/00_init.sql

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: "postgresql://prom_user:kusnyf-maczuz-7qabnA@postgres:5432/inventorydb?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
